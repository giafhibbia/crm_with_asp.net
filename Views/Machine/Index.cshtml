@model PagedResult<MyAuthDemo.ViewModels.MachineViewModel>

@{
    ViewBag.Title = "Machines";
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
}

<h1 class="text-2xl font-bold mb-6 text-[#009434]">@ViewBag.Title</h1>

<div class="mb-4 flex flex-col md:flex-row md:items-center md:justify-between gap-3 md:gap-4">
    <form method="get" class="flex flex-wrap gap-3 items-center w-full md:w-auto flex-grow">
        <input type="text" name="search" value="@Model.Search" placeholder="Search machine" class="border rounded px-3 py-1 w-full sm:w-auto" autocomplete="off"/>
        <button type="submit" class="bg-[#b9b9b9] text-white px-4 py-1 rounded hover:bg-[#727272]">Filter</button>
    </form>
    <button type="submit" form="bulkDeleteForm"
        id="deleteSelectedBtn"
        onclick="return confirm('Yakin ingin menghapus data terpilih?')"
        class="bg-red-600 text-white px-4 py-2 rounded hover:bg-red-800 whitespace-nowrap inline-block w-full sm:w-auto text-center">
        Delete Selected
    </button>

    <button id="printSelectedQrBtn" type="button" class="bg-[#009434] text-white px-4 py-2 rounded hover:bg-[#007e2a] whitespace-nowrap inline-block w-full sm:w-auto text-center">
        Print Selected QR
    </button>

    <div class="flex flex-col sm:flex-row gap-2 items-stretch sm:items-center w-full md:w-auto">
        <a href="@Url.Action("Create", "Machine")"
           class="bg-blue-600 text-white px-4 py-2 rounded hover:bg-[#007e2a] whitespace-nowrap inline-block w-full sm:w-auto text-center">
            + Add Machine
        </a>
    </div>
</div>

<div class="overflow-x-auto rounded shadow">
    <form id="bulkDeleteForm" asp-action="BulkDelete" method="post">
    <table class="min-w-full bg-white rounded overflow-hidden hidden md:table">
        <thead class="bg-[#f3f3f3] text-[#555555]">
            <tr>
                <th class="px-3 py-3 text-center">
                    <input type="checkbox" id="checkAll" />
                </th>
                <th class="px-4 py-3 text-left">Asset Code</th>
                <th class="px-4 py-3 text-left">Name</th>
                <th class="px-4 py-3 text-left">Full Name</th>
                <th class="px-4 py-3 text-left">Qty</th>
                <th class="px-4 py-3 text-left">Condition</th>
                <th class="px-4 py-3 text-left">Status</th>
                <th class="px-4 py-3 text-left">Category</th>
                <th class="px-4 py-3 text-left">Created By</th>
                <th class="px-4 py-3 text-left">Created</th>
                <th class="px-4 py-3 text-center">Actions</th>
            </tr>
        </thead>
        <tbody class="divide-y divide-gray-200">
            @if (Model != null && Model.Items.Count > 0)
            {
                int no = (Model.CurrentPage - 1) * Model.PageSize + 1;
                foreach (var m in Model.Items)
                {
                    <tr class="hover:bg-green-50">
                        <td class="px-3 py-2 text-center">
                            <input type="checkbox" name="ids" value="@m.Id" class="row-checkbox" data-asset="@m.AssetCode" />

                        </td>
                        <td class="px-4 py-2 flex items-center gap-2">
                            <span>@m.AssetCode</span>
                            <button type="button" class="qr-btn" data-asset="@m.AssetCode" title="Show QR Code">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-500 hover:text-[#009434]" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path d="M3 3h5v5H3V3zm13 0h5v5h-5V3zM3 16h5v5H3v-5zm13 5v-1h1v1h-1zm2-2v-1h1v1h-1zm-6-6h1v1h-1v-1zm2 2h1v1h-1v-1z"/>
                                </svg>
                            </button>
                        </td>

                        <td class="px-4 py-2">@m.Name</td>
                        <td class="px-4 py-2">@m.FullName</td>
                        <td class="px-4 py-2">@m.Qty</td>
                        <td class="px-4 py-2">@m.Condition</td>
                        <td class="px-4 py-2">
                            @MyAuthDemo.Helpers.EnumHelper.GetFriendlyName(m.StatusType)
                        </td>
                        <td class="px-4 py-2">@m.CategoryName</td>
                        <td class="px-4 py-2">@m.InputByUserName</td>
                        <td class="px-4 py-2">@(m.InputAt?.ToString("yyyy-MM-dd"))</td>
                        <td class="px-6 py-3 text-center space-x-3">
                            <a href="@Url.Action("Details", new { id = m.Id })" class="text-gray-600 hover:text-[#009434]" title="Details">
                                <!-- Eye icon -->
                                <svg xmlns="http://www.w3.org/2000/svg" class="inline-block w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                                    <path stroke-linecap="round" stroke-linejoin="round" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                                    <path stroke-linecap="round" stroke-linejoin="round" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.477 0 8.268 2.943 9.542 7-1.274 4.057-5.065 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
                                </svg>
                            </a>
                            <a href="@Url.Action("Edit", new { id = m.Id })" class="text-[#009434] hover:text-[#007e2a]" title="Edit">
                                <!-- Edit icon -->
                                <svg xmlns="http://www.w3.org/2000/svg" class="inline-block w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                                    <path stroke-linecap="round" stroke-linejoin="round" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-5-4l5-5m0 0l-5 5m5-5v12" />
                                </svg>
                            </a>
                            <a href="@Url.Action("Delete", new { id = m.Id })" class="text-red-600 hover:text-red-800" title="Delete" onclick="return confirm('Yakin ingin menghapus data ini?')">
                                <!-- Delete icon -->
                                <svg xmlns="http://www.w3.org/2000/svg" class="inline-block w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                                    <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
                                </svg>
                            </a>
                        </td>

                    </tr>
                }
            }
            else
            {
                <tr><td colspan="11" class="px-4 py-4 text-center text-gray-400">No machines found.</td></tr>
            }
        </tbody>
    </table>
    </form>
</div>

<form id="bulkDeleteFormMobile" asp-action="BulkDelete" method="post">
    <div class="md:hidden space-y-4 px-4">
        @foreach (var m in Model.Items)
        {
            <div class="bg-white rounded shadow p-4 flex items-start gap-3">
                <input type="checkbox" name="ids" value="@m.Id" class="row-checkbox-mobile mt-1 flex-shrink-0" data-asset="@m.AssetCode" />
                <div class="flex-1">
                    <div class="space-x-3 flex-shrink-0">
                        <a href="@Url.Action("Details", new { id = m.Id })" title="Details" class="text-gray-600 hover:text-[#009434] inline-block">
                            <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5 inline-block" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                                <path stroke-linecap="round" stroke-linejoin="round" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.477 0 8.268 2.943 9.542 7-1.274 4.057-5.065 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
                            </svg>
                        </a>
                        <a href="@Url.Action("Edit", new { id = m.Id })" title="Edit" class="text-[#009434] hover:text-[#007e2a] inline-block">
                            <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5 inline-block" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-5-4l5-5m0 0l-5 5m5-5v12" />
                            </svg>
                        </a>
                        <a href="@Url.Action("Delete", new { id = m.Id })" title="Delete" class="text-red-600 hover:text-red-800 inline-block" onclick="return confirm('Yakin ingin menghapus data ini?')">
                            <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5 inline-block" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
                            </svg>
                        </a>
                    </div>

                    <div><strong>Name:</strong> @m.Name</div>
                    <div><strong>Full Name:</strong> @m.FullName</div>
                    <div><strong>Qty:</strong> @m.Qty</div>
                    <div><strong>Condition:</strong> @m.Condition</div>
                    <div><strong>Status:</strong>
                        @MyAuthDemo.Helpers.EnumHelper.GetFriendlyName(m.StatusType)
                    </div>
                    <div><strong>Category:</strong> @m.CategoryName</div>
                    <div class="text-xs text-gray-500"><strong>Created:</strong> @(m.InputAt?.ToString("yyyy-MM-dd"))</div>
                </div>
            </div>
        }
    </div>
</form>

@if (Model.TotalPages > 1)
{
    <nav class="flex justify-center mt-6 space-x-2" aria-label="Pagination">
        @if (Model.HasPreviousPage)
        {
            <a href="@Url.Action("Index", new { page = Model.CurrentPage - 1, search = Model.Search })" class="px-3 py-1 border rounded hover:bg-[#009434] hover:text-white transition">Previous</a>
        }
        else
        {
            <span class="px-3 py-1 border rounded text-gray-400 cursor-not-allowed">Previous</span>
        }

        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            if (i == Model.CurrentPage)
            {
                <span class="px-3 py-1 border rounded bg-[#009434] text-white">@i</span>
            }
            else
            {
                <a href="@Url.Action("Index", new { page = i, search = Model.Search })" class="px-3 py-1 border rounded hover:bg-[#009434] hover:text-white transition">@i</a>
            }
        }

        @if (Model.HasNextPage)
        {
            <a href="@Url.Action("Index", new { page = Model.CurrentPage + 1, search = Model.Search })" class="px-3 py-1 border rounded hover:bg-[#009434] hover:text-white transition">Next</a>
        }
        else
        {
            <span class="px-3 py-1 border rounded text-gray-400 cursor-not-allowed">Next</span>
        }
    </nav>
}

@* Modal qrcode *@
<div id="qrModal" class="fixed inset-0 z-50 hidden bg-black bg-opacity-30 flex items-center justify-center">
    <div class="bg-white p-6 rounded-lg shadow-xl relative w-80 text-center">
        <button id="closeQrModal" class="absolute top-2 right-2 text-gray-500 hover:text-red-500">
            &times;
        </button>
        <h2 class="text-xl font-bold mb-2">QR Code</h2>
        <div id="qrCodeContainer" class="flex justify-center mb-3"></div>
        <div class="text-sm mb-2" id="qrAssetCode"></div>
        <button id="printQrBtn" class="bg-[#009434] text-white px-4 py-1 rounded hover:bg-[#007e2a]">
            Print QR
        </button>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/qrious/4.0.2/qrious.min.js"></script>
    <script>
    document.addEventListener('DOMContentLoaded', function () {
        const printSelectedQrBtn = document.getElementById('printSelectedQrBtn');
        const deleteSelectedBtn = document.getElementById('deleteSelectedBtn');
        const checkAllDesktop = document.getElementById('checkAll');

        function getAllRowCheckboxes() {
            return Array.from(document.querySelectorAll('.row-checkbox'));
        }

        function updateBulkActionButtonState() {
            const allRowCheckboxes = getAllRowCheckboxes();
            const anyChecked = allRowCheckboxes.some(cb => cb.checked);

            if (printSelectedQrBtn) {
                printSelectedQrBtn.disabled = !anyChecked;
                printSelectedQrBtn.classList.toggle('opacity-50', !anyChecked);
                printSelectedQrBtn.classList.toggle('cursor-not-allowed', !anyChecked);
            }
            if (deleteSelectedBtn) {
                deleteSelectedBtn.disabled = !anyChecked;
                deleteSelectedBtn.classList.toggle('opacity-50', !anyChecked);
                deleteSelectedBtn.classList.toggle('cursor-not-allowed', !anyChecked);
            }
        }

        if (checkAllDesktop) {
            checkAllDesktop.addEventListener('change', function () {
                const isChecked = this.checked;
                getAllRowCheckboxes().forEach(cb => {
                    cb.checked = isChecked;
                });
                updateBulkActionButtonState();
            });
        }

        function attachCheckboxListeners() {
            getAllRowCheckboxes().forEach(cb => {
                cb.addEventListener('change', function () {
                    // update status select all
                    if (checkAllDesktop) {
                        const allDesktop = getAllRowCheckboxes();
                        checkAllDesktop.checked = allDesktop.length > 0 && allDesktop.every(box => box.checked);
                    }
                    updateBulkActionButtonState();
                });
            });
        }

        // --- Print QR Selected ---
        if (printSelectedQrBtn) {
            printSelectedQrBtn.addEventListener('click', function () {
                const allRowCheckboxes = getAllRowCheckboxes();
                const selectedAssetCodes = [];
                allRowCheckboxes.forEach(cb => {
                    if (cb.checked) {
                        let assetCode = cb.getAttribute('data-asset') || '';
                        if (assetCode) selectedAssetCodes.push(assetCode);
                    }
                });

                if (selectedAssetCodes.length === 0) {
                    alert('Pilih minimal 1 asset terlebih dahulu.');
                    return;
                }
                let printWindow = window.open('', '_blank', 'width=700,height=900');
                if (!printWindow) {
                    alert('Pop-up blocker mungkin memblokir jendela cetak. Izinkan pop-up dan coba lagi.');
                    return;
                }

                const uniqueAssetCodes = Array.from(new Set(selectedAssetCodes));
                let html = ''
                    + '<html><head><title>Print QR Code</title>'
                    + '<style>'
                    + 'body{margin:16px;font-family:sans-serif;}'
                    + '.print-grid{display:grid;grid-template-columns:repeat(3,1fr);gap:24px;page-break-inside:avoid;}'
                    + '.qr-group{border:1px solid #eee;padding:12px 6px 16px 6px;text-align:center;background:#fff;break-inside:avoid;page-break-inside:avoid;}'
                    + '.qr-title{font-size:16px;font-weight:bold;margin-bottom:6px;}'
                    + 'img{margin-bottom:8px;max-width:100%;height:auto;}'
                    + '@@media print{body{margin:0 !important;}.qr-group{break-inside:avoid;page-break-inside:avoid;}}'
                    + '</style>'
                    + '</head><body>';
                html += '<div class="print-grid">';
                uniqueAssetCodes.forEach(function(code, i) {
                    const dataUrl = generateQrDataUrl(code, 180);
                    html += '<div class="qr-group">'
                        + '<div class="qr-title">' + code + '</div>'
                        + '<img src="' + dataUrl + '" width="180" height="180" data-qr-index="' + i + '" />'
                        + '</div>';
                });
                html += '</div>';

                html += '<script>'
                    + 'function allImagesLoaded(){var imgs=document.images;for(var i=0;i<imgs.length;i++){if(!imgs[i].complete)return false;}return true;}'
                    + 'function tryPrint(){if(allImagesLoaded()){setTimeout(function(){window.print();setTimeout(function(){window.close();},300);},150);}else{setTimeout(tryPrint,100);}}'
                    + 'tryPrint();'
                    + '<\/script>'
                    + '</body></html>';

                printWindow.document.open();
                printWindow.document.write(html);
                printWindow.document.close();
            });
        }

        function generateQrDataUrl(text, size = 180) {
            const qr = new QRious({ value: text, size: size });
            return qr.toDataURL('image/png');
        }

        // Inisialisasi!
        attachCheckboxListeners();
        updateBulkActionButtonState();
    });
    </script>
}
