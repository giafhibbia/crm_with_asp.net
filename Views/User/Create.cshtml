@model MyAuthDemo.Models.UserViewModel

@{
    ViewBag.Title = "Create New User";
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
}

<h1 class="text-3xl font-bold mb-6 text-[#009434]">@ViewBag.Title</h1>

<div class="bg-white p-6 rounded shadow-md">
    <form asp-action="Create" method="post">
        <div asp-validation-summary="ModelOnly" class="text-red-600 mb-4"></div>

        <div class="mb-4">
            <label asp-for="Name" class="block text-gray-700 text-sm font-bold mb-2"></label>
            <input asp-for="Name" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" />
            <span asp-validation-for="Name" class="text-red-600 text-xs italic"></span>
        </div>

        <div class="mb-4">
            <label asp-for="Email" class="block text-gray-700 text-sm font-bold mb-2"></label>
            <input asp-for="Email" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" />
            <span asp-validation-for="Email" class="text-red-600 text-xs italic"></span>
        </div>

        <div class="mb-4">
            <label asp-for="Password" class="block text-gray-700 text-sm font-bold mb-2"></label>
            <input asp-for="Password" type="password" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" />
            <span asp-validation-for="Password" class="text-red-600 text-xs italic"></span>
        </div>

        <div class="mb-4">
            <label asp-for="RoleId" class="block text-gray-700 text-sm font-bold mb-2"></label>
            <select asp-for="RoleId" id="role-select" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
                <option value="">-- Select Role --</option>
            </select>
            <span asp-validation-for="RoleId" class="text-red-600 text-xs italic"></span>
        </div>

        <div class="mb-4">
            <label asp-for="PositionId" class="block text-gray-700 text-sm font-bold mb-2"></label>
            <select asp-for="PositionId" id="position-select" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
                <option value="">-- Select Position --</option>
            </select>
            <span asp-validation-for="PositionId" class="text-red-600 text-xs italic"></span>
        </div>

        <div class="flex items-center justify-between">
            <button type="submit" class="bg-blue-600 text-white px-4 py-2 rounded hover:bg-[#007e2a] focus:outline-none focus:shadow-outline">
                Create User
            </button>
            <a href="@Url.Action("Index")" class="text-gray-600 hover:text-gray-900">Back to List</a>
        </div>
    </form>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>

    <script>
        $(document).ready(function() {
            $('#role-select').select2({
                placeholder: '-- Select Role --',
                allowClear: true,
                ajax: {
                    url: '@Url.Action("GetRolesForSelect2", "User")', // Endpoint API untuk Roles
                    dataType: 'json',
                    delay: 250,
                    data: function(params) {
                        return {
                            search: params.term, // search term
                            page: params.page || 1
                        };
                    },
                    processResults: function(data, params) {
                        params.page = params.page || 1;
                        return {
                            results: data.results,
                            pagination: {
                                more: data.pagination.more
                            }
                        };
                    },
                    cache: true
                }
            });

            $('#position-select').select2({
                placeholder: '-- Select Position --',
                allowClear: true,
                ajax: {
                    url: '@Url.Action("GetPositionsForSelect2", "User")', // Endpoint API untuk Positions
                    dataType: 'json',
                    delay: 250,
                    data: function(params) {
                        return {
                            search: params.term, // search term
                            page: params.page || 1
                        };
                    },
                    processResults: function(data, params) {
                        params.page = params.page || 1;
                        return {
                            results: data.results,
                            pagination: {
                                more: data.pagination.more
                            }
                        };
                    },
                    cache: true
                }
            });

            // If you are editing and want to pre-select values:
            @if (Model != null && Model.RoleId > 0)
            {
                <text>
                // For Role
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("GetRolesForSelect2", "User")?search=&page=1', // Fetch all roles to find the selected one
                    dataType: 'json'
                }).then(function (data) {
                    var selectedRole = data.results.find(function(role) {
                        return role.id == @Model.RoleId;
                    });
                    if (selectedRole) {
                        var option = new Option(selectedRole.text, selectedRole.id, true, true);
                        $('#role-select').append(option).trigger('change');
                    }
                });
                </text>
            }

            @if (Model != null && Model.PositionId.HasValue && Model.PositionId.Value > 0)
            {
                <text>
                // For Position
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("GetPositionsForSelect2", "User")?search=&page=1', // Fetch all positions to find the selected one
                    dataType: 'json'
                }).then(function (data) {
                    var selectedPosition = data.results.find(function(pos) {
                        return pos.id == @Model.PositionId.Value;
                    });
                    if (selectedPosition) {
                        var option = new Option(selectedPosition.text, selectedPosition.id, true, true);
                        $('#position-select').append(option).trigger('change');
                    }
                });
                </text>
            }
        });
    </script>
}